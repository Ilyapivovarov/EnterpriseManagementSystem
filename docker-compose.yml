version: '3.4'

networks:
  ems-network:
    external: true

services:
  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    hostname: api-gateway
    build:
      context: .
      dockerfile: Src/BackEnd/Gateways/ApiGateway/Dockerfile
    ports:
      - "8080:80"
    networks:
      ems-network:
        ipv4_address: 10.20.10.100
    depends_on:
      - identityservice

  emailservice:
    image: ${DOCKER_REGISTRY-}emailservice
    build:
      context: .
      dockerfile: Src/BackEnd/Microservices/EmailService/Dockerfile
    networks:
      ems-network:
        ipv4_address: 10.20.10.102
    depends_on:
      - identityservice
    
  identityservice:
    image: ${DOCKER_REGISTRY-}identityservice
    build:
      context: .
      dockerfile: Src/BackEnd/Microservices/IdentityService/Dockerfile
    networks:
      ems-network:
        ipv4_address: 10.20.10.101

  taskservice:
    image: ${DOCKER_REGISTRY-}taskservice
    build:
      context: .
      dockerfile: Src/BackEnd/Microservices/TaskService/Dockerfile
    networks:
      ems-network:
        ipv4_address: 10.20.10.103
    depends_on:
      - identityservice

  userservice:
    image: ${DOCKER_REGISTRY-}userservice
    build:
      context: .
      dockerfile: Src/BackEnd/Microservices/UserService/Dockerfile
    networks:
      ems-network:
        ipv4_address: 10.20.10.104
    depends_on:
      - identityservice

  logworkerservice:
    image: ${DOCKER_REGISTRY-}logworkerservice
    build:
      context: .
      dockerfile: Src/BackEnd/Microservices/LogWorkerService/Dockerfile
    networks:
      ems-network:
        ipv4_address: 10.20.10.105
    
  adminblazorapp:
    image: ${DOCKER_REGISTRY-}adminblazorapp
    build:
      context: .
      dockerfile: Src/FrontEnd/AdminBlazorApp/Dockerfile

  reactapp:
    image: ${DOCKER_REGISTRY-}reactapp
    build:
      context: .
      dockerfile: Src/FrontEnd/ReactApp/Dockerfile
    depends_on:
      - apigateway
    ports:
      - "3001:80"