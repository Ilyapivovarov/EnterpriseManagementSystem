version: '3.4'

networks:
  ems-network:
    external: true

services:
  apigateway:
    image: api-gateway
    container_name: "ApiGateway"
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: Src/BackEnd/Gateways/ApiGateway/Dockerfile
    networks:
      ems-network:
        ipv4_address: 10.20.10.100
  
  identityservice.webapi:
    image: identity-service-webapi
    container_name: "IdentityServiceWebApi"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: Src/BackEnd/Services/IdentityService/IdentityService.WebApi/Dockerfile
    networks:
      ems-network:
        ipv4_address: 10.20.10.101

  taskservice.webapi:
    image: task-service-webapi
    container_name: "TaskServiceWebApi"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: Src/BackEnd/Services/TaskService/TaskService.WebApi/Dockerfile
    networks:
      ems-network:
        ipv4_address: 10.20.10.103

  userservice.webapi:
    image: user-service-webapi
    container_name: "UserServiceWebApi"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: Src/BackEnd/Services/UserService/UserService.WebApi/Dockerfile
    networks:
      ems-network:
        ipv4_address: 10.20.10.104
  
  logworkerservice:
    image: log-worker-service
    container_name: "LogWorkerService"
    environment:
      - DOTNET_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: Src/BackEnd/WorkerServices/LogWorkerService/Dockerfile
    networks:
      ems-network:
        ipv4_address: 10.20.10.105
