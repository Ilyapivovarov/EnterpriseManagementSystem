version: '3.9'

name: ems-production

services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    hostname: db
    container_name: MsSqlServer
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: yourStrong(!)Password
    restart: always

  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: rabbit-mq
    container_name: RabbitMq
    restart: always
    ports:
      - "15673:15672"

  mongo:
    image: mongo
    container_name: Mongo
    hostname: mongo
    restart: always

  redis:
    image: redis
    hostname: redis
    container_name: Redis
    environment:
      ALLOW_EMPTY_PASSWROD: yes
      REDIS_REPLICATION_MODE: master
    restart: always
  
  apigateway:
    image: api-gateway
    container_name: ApiGateway
    hostname: api.ems.com
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: Src/BackEnd/Gateways/ApiGateway/Dockerfile
  
  identityservice.webapi:
    image: identity-service-webapi
    container_name: IdentityServiceApi
    hostname: api.ems.identity.com
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: Src/BackEnd/Services/IdentityService/IdentityService.WebApi/Dockerfile

  taskservice.webapi:
    image: task-service-webapi
    container_name: TaskServiceApi
    hostname: api.ems.task.com
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: Src/BackEnd/Services/TaskService/TaskService.WebApi/Dockerfile

  userservice.webapi:
    image: user-service-webapi
    container_name: UserServiceApi
    hostname: api.ems.user.com
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: Src/BackEnd/Services/UserService/UserService.WebApi/Dockerfile

  logworkerservice:
    image: log-worker-service
    container_name: LogWorkerService
    environment:
      - DOTNET_ENVIRONMENT=Production
    build:
      context: .
      dockerfile: Src/BackEnd/WorkerServices/LogWorkerService/Dockerfile
